{"version":3,"sources":["webpack:///./src/utils/Button/Button.jsx","webpack:///./src/utils/Button/index.jsx","webpack:///./src/utils/Modal/Modal.jsx","webpack:///./src/utils/Modal/index.jsx","webpack:///./src/img/breakfast.svg","webpack:///./src/components/Header/Header.jsx","webpack:///./src/utils/Form/Form.jsx","webpack:///./src/utils/Form/index.jsx","webpack:///./src/utils/validation.js","webpack:///./src/components/SignUpForm/SignUpForm.js","webpack:///./src/components/SignInForm/SignInForm.js","webpack:///./src/components/AuthModals/AuthModals.js","webpack:///./src/components/Header/index.jsx"],"names":["StyledButton","styled","button","_templateObject","colors","dark","light","accent","props","isLarge","css","_templateObject2","ButtonList","div","_templateObject3","Button","_ref","action","title","large","dataAttr","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_Button__WEBPACK_IMPORTED_MODULE_2__","_extends","type","onClick","data-attr","propTypes","PropTypes","oneOfType","func","string","isRequired","bool","number","defaultProps","undefined","ModalBackground","ModalWindow","StyledModal","children","visible","react_default","react_addons_css_transition_group_default","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","transitionLeaveTimeout","arrayOf","node","CloseIcon","React","lazy","Promise","all","__webpack_require__","e","then","bind","Modal","body","footer","closeModal","Modal_Modal","style","display","alignItems","className","module","exports","p","StyledHeader","header","Form","form","Form_templateObject","Input","input","Error","FormTemplate","initialValues","fields","validationSchema","firebaseAction","onSuccessAction","formik_esm","onSubmit","values","actions","response","setSubmitting","error","setStatus","msg","message","handleChange","handleBlur","handleSubmit","errors","touched","status","map","field","key","name","onChange","onBlur","value","placeholder","object","url","firebase","signInSchema","yup","shape","password","min","required","email","signUpSchema","confirmPassword","oneOf","SignUpForm","console","log","Component","this","state","doCreateUserWithEmailAndPassword","utils_Form","fieldsConfig","SignInForm","doSignInWithEmailAndPassword","SignInForm_extends","resolve","AuthModals","signIn","signUp","mode","_this","setState","prevProps","AuthModals_defineProperty","_this2","_this$state","react","fallback","AuthModals_Button","toggleModal","context","Consumer","components_SignInForm_SignInForm","components_SignUpForm_SignUpForm","Logo","Header","Header_Header","src","logoPic","alt","components_AuthModals_AuthModals"],"mappings":"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","file":"9.js","sourcesContent":["import styled, { css } from 'styled-components';\nimport {colors} from '../../styles/globals';\n\nconst StyledButton = styled.button`\n  border: 2px solid ${colors.dark};\n  background-color: ${colors.light};\n  padding: 0.5rem;\n  margin: 0.25rem;\n  color: ${colors.dark};\n  font-weight: 700;\n  cursor: pointer;\n  border-radius: 2px;\n  transition: background-color 1s;\n\n  a {\n    color: ${colors.accent};\n    text-decoration: none;\n    width: 100%;\n    height: 100%;\n    &:hover {\n      color: white;\n    }\n  }\n\n  &:hover {\n    background-color: ${colors.accent};\n    color: white;\n    a {\n      color: white;\n    }\n  }\n\n  ${props => props.isLarge\n    && css`\n      background-color: transparent;\n      border-color: ${colors.light};\n      color: ${colors.light};\n      font-size: 1rem;\n      height: 3rem;\n    `}\n`;\n\nconst ButtonList = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  padding-bottom: 1rem;\n`;\n\nexport { StyledButton, ButtonList };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StyledButton } from \"./Button\";\n\nconst Button = ({ action, title, large, dataAttr }) => (\n  <StyledButton\n    {...(typeof action === \"string\" ? { type: action } : { onClick: action })}\n    isLarge={large}\n    data-attr={dataAttr}\n  >\n    {title}\n  </StyledButton>\n);\n\nButton.propTypes = {\n  action: PropTypes.oneOfType([PropTypes.func, PropTypes.string]).isRequired,\n  title: PropTypes.string.isRequired,\n  large: PropTypes.bool,\n  dataAttr: PropTypes.number\n};\n\nButton.defaultProps = {\n  large: false,\n  dataAttr: undefined\n};\n\nexport default Button;\n","import styled from \"styled-components\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ModalBackground = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  top: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  padding: calc(50px + 5.5rem) 50px 50px 50px;\n  z-index: 1;\n`;\n\nconst ModalWindow = styled.div`\n  background-color: whitesmoke;\n  border-radius: 5px;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 0.5rem 0.5rem 2rem 0.5rem;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  text-align: center;\n\n  h2 {\n    color: #ee6c4d;\n    text-align: center;\n    padding-bottom: 0.5rem;\n  }\n\n  h3 {\n    color: #3d5a80;\n    padding-bottom: 0.5rem;\n  }\n\n  p {\n    color: #3d5a80;\n    padding-bottom: 0.5rem;\n    max-width: 80%;\n    margin: 0 auto;\n\n    &:last-of-type {\n      font-size: 0.75rem;\n    }\n  }\n\n  img {\n    width: 80%;\n    border-radius: 5%;\n    opacity: 0.8;\n    padding-bottom: 0.5rem;\n  }\n`;\n\nconst StyledModal = props => {\n  const { children, visible } = props;\n  return (\n    visible && (\n      <ModalBackground>\n        <ReactCSSTransitionGroup\n          transitionName=\"fade\"\n          transitionAppear\n          transitionAppearTimeout={500}\n          transitionEnter={false}\n          transitionLeave\n          transitionLeaveTimeout={500}\n        >\n          <ModalWindow>{children}</ModalWindow>\n        </ReactCSSTransitionGroup>\n      </ModalBackground>\n    )\n  );\n};\n\nStyledModal.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n\nexport default StyledModal;\n","/* eslint-disable no-unused-expressions */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport StyledModal from \"./Modal\";\nconst CloseIcon = React.lazy(() => import(\"./CloseIcon\"));\n\nconst Modal = props => {\n  const { visible, title, body, footer, closeModal } = props;\n  return (\n    <StyledModal visible={visible}>\n      <CloseIcon closeModal={closeModal} />\n      <h2 style={{ display: \"flex\", alignItems: \"center\" }}>{title}</h2>\n      {body}\n      <div className=\"modal-footer\">{footer}</div>\n    </StyledModal>\n  );\n};\n\nModal.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  body: PropTypes.node,\n  footer: PropTypes.node,\n  closeModal: PropTypes.func\n};\n\nexport default Modal;\n","module.exports = __webpack_public_path__ + \"img/c752d8b1b96dd4e6aa2c79fdfa2b4e3e.svg\";","\nimport styled from 'styled-components';\nimport {colors} from '../../styles/globals';\n\nconst StyledHeader = styled.header`\n  background-color: ${colors.dark};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 2rem;\n`;\n\nexport default StyledHeader;\n","import styled from \"styled-components\";\nimport { colors } from \"../../styles/globals\";\n\nconst Form = styled.form`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 1rem 0;\n`;\n\nconst Input = styled.input`\n  width: 300px;\n  height: 35px;\n  border: 2px solid ${colors.dark};\n  background-color: #fff;\n  margin-bottom: 0.5rem;\n  padding: 0.25rem;\n  color: ${colors.dark};\n  font-size: 1rem;\n\n  &:focus {\n    border: 2px solid ${colors.accent};\n    outline: none;\n  }\n`;\n\nconst Error = styled.div`\n  font-size: 0.75rem;\n  color: ${colors.accent};\n  margin-bottom: 0.5rem;\n`;\n\nexport { Form, Input, Error };\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport PropTypes from \"prop-types\";\n\nimport { Error, Form, Input } from \"./Form\";\nimport Button from \"../Button\";\n\nconst FormTemplate = props => {\n  const {\n    initialValues,\n    fields,\n    validationSchema,\n    firebaseAction,\n    onSuccessAction\n  } = props;\n\n  const onSubmit = (values, actions) => {\n    firebaseAction(values).then(\n      (response) => {\n        actions.setSubmitting(false);\n        onSuccessAction && onSuccessAction(response);\n      },\n      error => {\n        actions.setSubmitting(false);\n        actions.setStatus({ msg: error.message });\n      }\n    );\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      validationSchema={validationSchema}\n    >\n      {({\n        values,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        errors,\n        touched,\n        status\n      }) => {\n        return (\n          <Form onSubmit={handleSubmit}>\n            {fields.map(field => (\n              <div key={field.name}>\n                <Input\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values[field.name]}\n                  type={field.type}\n                  name={field.name}\n                  placeholder={field.placeholder}\n                />\n                {errors[field.name] && touched[field.name] ? (\n                  <Error>{errors[field.name]}</Error>\n                ) : null}\n              </div>\n            ))}\n            {status && status.msg && <Error>{status.msg}</Error>}\n            <Button title=\"Submit\" action=\"submit\" />\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nFormTemplate.propTypes = {\n  initialValues: PropTypes.object,\n  url: PropTypes.string,\n  firebaseAction: PropTypes.func,\n  fields: PropTypes.arrayOf(PropTypes.object),\n  validationSchema: PropTypes.object,\n  firebase: PropTypes.object,\n  onSuccessAction: PropTypes.func\n};\n\nexport default FormTemplate;\n","import * as yup from \"yup\"\n\nconst signInSchema = yup.object().shape({\n  password: yup\n    .string()\n    .min(6, \"Your password is too short!\")\n    .required(\"This field is required!\"),\n  email: yup\n    .string()\n    .email(\"Your email is invalid!\")\n    .required(\"This field is required!\")\n});\n\nconst signUpSchema = yup.object().shape({\n  password: yup\n    .string()\n    .min(6, \"Your password is too short!\")\n    .required(\"This field is required!\"),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\n  email: yup\n    .string()\n    .email(\"Your email is invalid!\")\n    .required(\"This field is required!\")\n});\n\nexport { signInSchema, signUpSchema };\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormTemplate from \"../../utils/Form\";\nimport { signUpSchema } from \"../../utils/validation\";\n\nclass SignUpForm extends Component {\n  state = {\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    }\n  };\n\n  fieldsConfig = [\n    { type: \"text\", name: \"email\", placeholder: \"Email\" },\n    { type: \"password\", name: \"password\", placeholder: \"Password\" },\n    {\n      type: \"password\",\n      name: \"confirmPassword\",\n      placeholder: \"Confirm password\"\n    }\n  ];\n\n  onSuccessAction = (response) => {\n    console.log(response);\n  };\n\n  render() {\n    const { initialValues } = this.state;\n    const {\n      firebase: { doCreateUserWithEmailAndPassword }\n    } = this.props;\n    return (\n      <FormTemplate\n        initialValues={initialValues}\n        fields={this.fieldsConfig}\n        validationSchema={signUpSchema}\n        firebaseAction={doCreateUserWithEmailAndPassword}\n        onSuccessAction={this.onSuccessAction}\n        {...this.props}\n      />\n    );\n  }\n}\n\nSignUpForm.propTypes = {\n  initialValues: PropTypes.object,\n  firebase: PropTypes.object,\n};\n\nexport default SignUpForm;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormTemplate from \"../../utils/Form\";\nimport { signInSchema } from \"../../utils/validation\";\n\nclass SignInForm extends Component {\n  state = {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    }\n  };\n\n  fieldsConfig = [\n    { type: \"text\", name: \"email\", placeholder: \"Email\" },\n    { type: \"password\", name: \"password\", placeholder: \"Password\" }\n  ];\n\n  onSuccessAction = (response) => {\n    console.log(response);\n  };\n\n    render() {\n    const { initialValues } = this.state;\n    const {\n      firebase: { doSignInWithEmailAndPassword }\n    } = this.props;\n    return (\n      <FormTemplate\n        initialValues={initialValues}\n        fields={this.fieldsConfig}\n        validationSchema={signInSchema}\n        firebaseAction={doSignInWithEmailAndPassword}\n        onSuccessAction={this.onSuccessAction}\n        {...this.props}\n      />\n    );\n  }\n}\n\nSignInForm.propTypes = {\n  initialValues: PropTypes.object,\n  firebase: PropTypes.object\n};\n\nexport default SignInForm;\n","import React, { Component, Suspense } from \"react\";\nimport SignUpForm from \"../SignUpForm/SignUpForm\";\nimport FirebaseContext from \"../Firebase/context\";\nimport SignInForm from \"../SignInForm/SignInForm\";\nimport Modal from \"../../utils/Modal\";\n\nconst Button = React.lazy(() => import(\"../../utils/Button\"));\n\nclass AuthModals extends Component {\n  state = {\n    signIn: false,\n    signUp: false\n  };\n\n  toggleModal = mode => {\n    this.setState(prevProps => ({\n      [mode]: !prevProps[mode]\n    }));\n  };\n\n  render() {\n    const { signUp, signIn } = this.state;\n    return (\n      <div>\n        <Suspense fallback={<div />}>\n          <Button\n            large\n            action={() => this.toggleModal(\"signIn\")}\n            title=\"Sign in\"\n          />\n          <Button\n            large\n            action={() => this.toggleModal(\"signUp\")}\n            title=\"Sign up\"\n          />\n          <Modal\n            visible={signIn}\n            closeModal={() => this.toggleModal(\"signIn\")}\n            title=\"Sign in\"\n            body={\n              <FirebaseContext.Consumer>\n                {firebase => <SignInForm firebase={firebase} />}\n              </FirebaseContext.Consumer>\n            }\n          />\n          <Modal\n            visible={signUp}\n            closeModal={() => this.toggleModal(\"signUp\")}\n            title=\"Sign up\"\n            body={\n              <FirebaseContext.Consumer>\n                {firebase => <SignUpForm firebase={firebase} />}\n              </FirebaseContext.Consumer>\n            }\n          />\n        </Suspense>\n      </div>\n    );\n  }\n}\n\nexport default AuthModals;\n","import React, { Suspense } from \"react\";\nimport StyledHeader from \"./Header\";\nconst Logo = React.lazy(() => import(\"../../utils/Logo\"));\nimport logoPic from \"../../img/breakfast.svg\";\nimport AuthModals from \"../AuthModals/AuthModals\";\n\nconst Header = () => {\n  return (\n    <StyledHeader>\n      <Logo>\n        <img src={logoPic} alt=\"Icon depicting breakfast plate\" />\n        <h1>Breakfast</h1>\n      </Logo>\n      <Suspense fallback={<div />}>\n        <AuthModals />\n      </Suspense>\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n"],"sourceRoot":""}