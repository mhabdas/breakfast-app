{"version":3,"sources":["webpack:///./src/utils/Button/Button.jsx","webpack:///./src/components/SignUpForm/SignUpForm.js","webpack:///./src/utils/Button/index.jsx","webpack:///./src/utils/Form/index.jsx","webpack:///./src/utils/Form/Form.jsx","webpack:///./src/utils/validation.js"],"names":["_styledComponents","__webpack_require__","StyledButton","styled","button","_templateObject","colors","dark","light","accent","props","isLarge","css","_templateObject2","ButtonList","div","_templateObject3","_react","_validation","SignUpForm","state","initialValues","email","password","confirmPassword","fieldsConfig","type","name","placeholder","Component","_this2","this","_react2","default","createElement","_context2","Consumer","firebase","_Form2","fields","validationSchema","signUpSchema","propTypes","PropTypes","object","_Button","Button","_ref","action","title","large","dataAttr","_extends","onClick","data-attr","func","isRequired","string","bool","number","defaultProps","undefined","_formik","_Form","FormTemplate","firebaseAction","Formik","onSubmit","values","actions","console","log","then","response","setSubmitting","data","error","setErrors","setStatus","msg","handleChange","handleBlur","handleSubmit","errors","touched","Form","map","field","key","Input","onChange","onBlur","value","Error","_Button2","url","arrayOf","form","input","yup","signInSchema","shape","min","required","oneOf","ref"],"mappings":"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","file":"9.js","sourcesContent":["import styled, { css } from 'styled-components';\nimport colors from '../../styles/globals';\n\nconst StyledButton = styled.button`\n  border: 2px solid ${colors.dark};\n  background-color: ${colors.light};\n  padding: 0.5rem;\n  margin: 0.25rem;\n  color: ${colors.dark};\n  font-weight: 700;\n  cursor: pointer;\n  border-radius: 2px;\n  transition: background-color 1s;\n\n  a {\n    color: ${colors.accent};\n    text-decoration: none;\n    width: 100%;\n    height: 100%;\n    &:hover {\n      color: white;\n    }\n  }\n\n  &:hover {\n    background-color: ${colors.accent};\n    color: white;\n    a {\n      color: white;\n    }\n  }\n\n  ${props => props.isLarge\n    && css`\n      background-color: transparent;\n      border-color: ${colors.light};\n      color: ${colors.light};\n      font-size: 1rem;\n      height: 3rem;\n    `}\n`;\n\nconst ButtonList = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  padding-bottom: 1rem;\n`;\n\nexport { StyledButton, ButtonList };\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormTemplate from \"../../utils/Form\";\nimport { signUpSchema } from \"../../utils/validation\";\nimport FirebaseContext from \"../Firebase/context\";\n\nclass SignUpForm extends Component {\n  state = {\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    }\n  };\n\n  fieldsConfig = [\n    { type: \"text\", name: \"email\", placeholder: \"Email\" },\n    { type: \"password\", name: \"password\", placeholder: \"Password\" },\n    {\n      type: \"password\",\n      name: \"confirmPassword\",\n      placeholder: \"Confirm password\"\n    }\n  ];\n\n  render() {\n    const {\n      initialValues,\n      // firebase: { doCreateUserWithEmailAndPassword }\n    } = this.state;\n    return (\n      <FirebaseContext.Consumer>\n        {firebase => <FormTemplate\n        initialValues={initialValues}\n        fields={this.fieldsConfig}\n        validationSchema={signUpSchema}\n        firebase={firebase}\n        // firebaseAction={doCreateUserWithEmailAndPassword}\n      />}\n      </FirebaseContext.Consumer>\n    );\n  }\n}\n\nSignUpForm.propTypes = {\n  initialValues: PropTypes.object\n};\n\nexport default SignUpForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StyledButton } from \"./Button\";\n\nconst Button = ({ action, title, large, dataAttr }) => (\n  <StyledButton\n    {...(typeof action === \"string\" ? { type: action } : { onClick: action })}\n    isLarge={large}\n    data-attr={dataAttr}\n  >\n    {title}\n  </StyledButton>\n);\n\nButton.propTypes = {\n  action: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  large: PropTypes.bool,\n  dataAttr: PropTypes.number\n};\n\nButton.defaultProps = {\n  large: false,\n  dataAttr: undefined\n};\n\nexport default Button;\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport PropTypes from \"prop-types\";\n\nimport { Error, Form, Input } from \"./Form\";\nimport Button from \"../Button\";\n\nconst FormTemplate = props => {\n  const {\n    initialValues,\n    firebaseAction,\n    fields,\n    validationSchema,\n  } = props;\n\n  const onSubmit = (values, actions) => {\n    console.log(values);\n    firebaseAction(values).then(\n      response => {\n        actions.setSubmitting(false);\n        console.log(response.data);\n      },\n      error => {\n        actions.setSubmitting(false);\n        actions.setErrors(error.response.data.error);\n        actions.setStatus({ msg: \"Error\" });\n        console.log(error.response.data.error);\n      }\n    );\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      validationSchema={validationSchema}\n    >\n      {({\n        values,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        errors,\n        touched\n      }) => {\n        return (\n          <Form onSubmit={handleSubmit}>\n            {fields.map(field => (\n              <div key={field.name}>\n                <Input\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values[field.name]}\n                  type={field.type}\n                  name={field.name}\n                  placeholder={field.placeholder}\n                />\n                {errors[field.name] && touched[field.name] ? (\n                  <Error>{errors[field.name]}</Error>\n                ) : null}\n              </div>\n            ))}\n            <Button title=\"Submit\" action=\"submit\" />\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nFormTemplate.propTypes = {\n  initialValues: PropTypes.object,\n  url: PropTypes.string,\n  firebaseAction: PropTypes.func,\n  fields: PropTypes.arrayOf(PropTypes.object),\n  validationSchema: PropTypes.object\n};\n\nexport default FormTemplate;\n","import styled from \"styled-components\";\nimport colors from '../../styles/globals';\n\nconst Form = styled.form`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 1rem 0;\n`;\n\nconst Input = styled.input`\n  width: 300px;\n  height: 35px;\n  border: 2px solid ${colors.dark};\n  background-color: #fff;\n  margin-bottom: 0.5rem;\n  padding: 0.25rem;\n  color: ${colors.dark};\n  font-size: 1rem;\n  \n  &:focus {\n      border: 2px solid ${colors.accent};\n      outline: none;\n  }\n`;\n\nconst Error = styled.div`\n  font-size: 0.75rem;\n  color: ${colors.accent};\n  margin-bottom: 0.5rem;\n`;\n\nexport { Form, Input, Error };\n","import * as yup from \"yup\";\n\nconst signInSchema = yup.object().shape({\n  password: yup\n    .string()\n    .min(6, \"Your password is too short!\")\n    .required(\"This field is required!\"),\n  email: yup\n    .string()\n    .email(\"Your email is invalid!\")\n    .required(\"This field is required!\")\n});\n\nconst signUpSchema = yup.object().shape({\n  password: yup\n    .string()\n    .min(6, \"Your password is too short!\")\n    .required(\"This field is required!\"),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\n  email: yup\n    .string()\n    .email(\"Your email is invalid!\")\n    .required(\"This field is required!\")\n});\n\nexport { signInSchema, signUpSchema };\n"],"sourceRoot":""}