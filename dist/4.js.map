{"version":3,"sources":["webpack:///./src/utils/Button/Button.jsx","webpack:///./src/utils/Button/index.jsx","webpack:///./src/utils/Modal/index.jsx","webpack:///./src/utils/Modal/Modal.jsx","webpack:///./src/components/Header/index.jsx","webpack:///./src/components/Header/Header.jsx","webpack:///./src/img/breakfast.svg","webpack:///./src/components/AuthModals/AuthModals.js"],"names":["_styledComponents","__webpack_require__","StyledButton","styled","button","_templateObject","colors","dark","light","accent","props","isLarge","css","_templateObject2","ButtonList","div","_templateObject3","_Button","Button","_ref","action","title","large","dataAttr","_react2","default","createElement","onClick","data-attr","propTypes","PropTypes","func","isRequired","string","bool","number","defaultProps","undefined","Modal","visible","body","footer","_Modal2","className","node","ModalBackground","ModalWindow","StyledModal","children","_reactAddonsCssTransitionGroup2","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","transitionLeaveTimeout","oneOfType","arrayOf","Logo","React","lazy","e","then","t","bind","_Header2","src","logoPic","alt","_AuthModals2","StyledHeader","header","module","exports","p","_react","AuthModals","state","signIn","signUp","toggleModal","mode","_this","setState","prevProps","Component","_this2","this","_Button2"],"mappings":"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","file":"4.js","sourcesContent":["import styled, { css } from 'styled-components';\nimport colors from '../../styles/globals';\n\nconst StyledButton = styled.button`\n  border: 2px solid ${colors.dark};\n  background-color: ${colors.light};\n  padding: 0.5rem;\n  margin: 0.25rem;\n  color: ${colors.dark};\n  font-weight: 700;\n  cursor: pointer;\n  border-radius: 2px;\n  transition: background-color 1s;\n\n  a {\n    color: ${colors.accent};\n    text-decoration: none;\n    width: 100%;\n    height: 100%;\n    &:hover {\n      color: white;\n    }\n  }\n\n  &:hover {\n    background-color: ${colors.accent};\n    color: white;\n    a {\n      color: white;\n    }\n  }\n\n  ${props => props.isLarge\n    && css`\n      background-color: transparent;\n      border-color: ${colors.light};\n      color: ${colors.light};\n      font-size: 1rem;\n      height: 3rem;\n    `}\n`;\n\nconst ButtonList = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  padding-bottom: 1rem;\n`;\n\nexport { StyledButton, ButtonList };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledButton } from './Button';\n\nconst Button = ({\n  action, title, large, dataAttr,\n}) => (\n  <StyledButton onClick={action} isLarge={large} data-attr={dataAttr}>\n    {title}\n  </StyledButton>\n);\n\nButton.propTypes = {\n  action: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  large: PropTypes.bool,\n  dataAttr: PropTypes.number,\n};\n\nButton.defaultProps = {\n  large: false,\n  dataAttr: undefined,\n};\n\nexport default Button;\n","/* eslint-disable no-unused-expressions */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport StyledModal from \"./Modal\";\n\nconst Modal = props => {\n  const { visible, title, body, footer } = props;\n  return (\n    <StyledModal visible={visible}>\n      <h2>{title}</h2>\n      {body}\n      <div className=\"modal-footer\">{footer}</div>\n    </StyledModal>\n  );\n};\n\nModal.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  body: PropTypes.node,\n  footer: PropTypes.node,\n};\n\nexport default Modal;\n","import styled from 'styled-components';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ModalBackground = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  top: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  padding: calc(50px + 5.5rem) 50px 50px 50px;\n  z-index: 1;\n`;\n\nconst ModalWindow = styled.div`\n  background-color: whitesmoke;\n  border-radius: 5px;\n  max-width: 500px;\n  min-height: 300px;\n  margin: 0 auto;\n  padding: 30px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  text-align: center;\n\n  h2 {\n    color: #ee6c4d;\n    text-align: center;\n    padding-bottom: 0.5rem;\n  }\n\n  h3 {\n    color: #3d5a80;\n    padding-bottom: 0.5rem;\n  }\n\n  p {\n    color: #3d5a80;\n    padding-bottom: 0.5rem;\n\n    &:last-of-type {\n      font-size: 0.75rem;\n    }\n  }\n\n  img {\n    width: 80%;\n    border-radius: 5%;\n    opacity: 0.8;\n    padding-bottom: 0.5rem;\n  }\n`;\n\nconst StyledModal = (props) => {\n  const {\n    children,\n    visible,\n  } = props;\n  return visible && (\n  <ModalBackground>\n    <ReactCSSTransitionGroup\n      transitionName=\"fade\"\n      transitionAppear\n      transitionAppearTimeout={500}\n      transitionEnter={false}\n      transitionLeave\n      transitionLeaveTimeout={500}\n    >\n      <ModalWindow>{children}</ModalWindow>\n    </ReactCSSTransitionGroup>\n  </ModalBackground>\n  );\n};\n\nStyledModal.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default StyledModal;\n","import React from \"react\";\nimport StyledHeader from \"./Header\";\nconst Logo = React.lazy(() => import(\"../../utils/Logo\"));\nimport logoPic from \"../../img/breakfast.svg\";\nimport AuthModals from \"../AuthModals/AuthModals\";\n\nconst Header = () => {\n  return (\n    <StyledHeader>\n      <Logo>\n        <img src={logoPic} alt=\"Icon depicting breakfast plate\" />\n        <h1>Breakfast</h1>\n      </Logo>\n      <AuthModals />\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n","\nimport styled from 'styled-components';\nimport colors from '../../styles/globals';\n\nconst StyledHeader = styled.header`\n  background-color: ${colors.dark};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 2rem;\n`;\n\nexport default StyledHeader;\n","module.exports = __webpack_public_path__ + \"img/c752d8b1b96dd4e6aa2c79fdfa2b4e3e.svg\";","import React, { Component } from \"react\";\n\nimport Button from \"../../utils/Button\";\nimport Modal from \"../../utils/Modal\";\n\nclass AuthModals extends Component {\n  state = {\n    signIn: false,\n    signUp: false\n  };\n\n  toggleModal = mode => {\n    this.setState(prevProps => ({\n      [mode]: !prevProps[mode]\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <Button\n          large\n          action={() => this.toggleModal(\"signIn\")}\n          title=\"Sign in\"\n        />\n        <Button\n          large\n          action={() => this.toggleModal(\"signUp\")}\n          title=\"Sign up\"\n        />\n        <Modal\n          visible={this.state.signIn}\n          title=\"Sign in\"\n          footer={\n            <Button title=\"Close\" action={() => this.toggleModal(\"signIn\")} />\n          }\n        />\n        <Modal\n          visible={this.state.signUp}\n          title=\"Sign up\"\n          footer={\n            <Button title=\"Close\" action={() => this.toggleModal(\"signUp\")} />\n          }\n        />\n      </div>\n    );\n  }\n}\n\nexport default AuthModals;\n"],"sourceRoot":""}