{"version":3,"sources":["webpack:///./src/utils/Modal/index.jsx","webpack:///./src/utils/Modal/Modal.jsx"],"names":["__webpack_require__","_reactIcons","_io","CloseIcon","_ref","closeModal","_react2","default","createElement","IconContext","Provider","value","className","onClick","IoIosClose","Modal","props","visible","title","body","footer","_Modal2","style","display","alignItems","propTypes","PropTypes","func","bool","isRequired","string","node","ModalBackground","styled","div","_templateObject","ModalWindow","_templateObject2","StyledModal","children","_reactAddonsCssTransitionGroup2","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","transitionLeaveTimeout","oneOfType","arrayOf"],"mappings":"2IACA,QAAAA,EAAA,QACAA,EAAA,KACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,SACAA,EAAA,yDAEA,IAAMG,EAAY,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,WAAH,OAChBC,EAAAC,QAAAC,cAACP,EAAAQ,YAAYC,SAAb,CAAsBC,MAAO,CAAEC,UAAW,eACxCN,EAAAC,QAAAC,cAAA,OAAKI,UAAU,gBACbN,EAAAC,QAAAC,cAAA,UAAQK,QAASR,GACfC,EAAAC,QAAAC,cAACN,EAAAY,WAAD,UAMFC,EAAQ,SAAAC,GAAS,IACbC,EAA6CD,EAA7CC,QAASC,EAAoCF,EAApCE,MAAOC,EAA6BH,EAA7BG,KAAMC,EAAuBJ,EAAvBI,OAAQf,EAAeW,EAAfX,WACtC,OACEC,EAAAC,QAAAC,cAACa,EAAAd,QAAD,CAAaU,QAASA,GACpBX,EAAAC,QAAAC,cAACL,EAAD,CAAWE,WAAYA,IACvBC,EAAAC,QAAAC,cAAA,MAAIc,MAAO,CAAEC,QAAS,OAAQC,WAAY,WAAaN,GACtDC,EACDb,EAAAC,QAAAC,cAAA,OAAKI,UAAU,gBAAgBQ,KAKrCjB,EAAUsB,UAAY,CACpBpB,WAAYqB,UAAUC,MAGxBZ,EAAMU,UAAY,CAChBR,QAASS,UAAUE,KAAKC,WACxBX,MAAOQ,UAAUI,OAAOD,WACxBV,KAAMO,UAAUK,KAChBX,OAAQM,UAAUK,KAClB1B,WAAYqB,UAAUC,gBAGTZ,qvDCzCff,EAAA,SACAA,EAAA,UACAA,EAAA,QACAA,EAAA,wJAEA,IAAMgC,EAAkBC,UAAOC,IAAzBC,GAWAC,EAAcH,UAAOC,IAArBG,GAyCAC,EAAc,SAACtB,GAAU,IAE3BuB,EAEEvB,EAFFuB,SAGF,OADIvB,EADFC,SAGFX,EAAAC,QAAAC,cAACwB,EAAD,KACE1B,EAAAC,QAAAC,cAACgC,EAAAjC,QAAD,CACEkC,eAAe,OACfC,kBAAA,EACAC,wBAAyB,IACzBC,iBAAiB,EACjBC,iBAAA,EACAC,uBAAwB,KAExBxC,EAAAC,QAAAC,cAAC4B,EAAD,KAAcG,MAMpBD,EAAYb,UAAY,CACtBc,SAAUb,UAAUqB,UAAU,CAC5BrB,UAAUsB,QAAQtB,UAAUK,MAC5BL,UAAUK,OACTF,sBAGUS","file":"1.js","sourcesContent":["/* eslint-disable no-unused-expressions */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconContext } from \"react-icons\";\nimport { IoIosClose } from \"react-icons/io\";\nimport StyledModal from \"./Modal\";\n\nconst CloseIcon = ({ closeModal }) => (\n  <IconContext.Provider value={{ className: \"close-icon\" }}>\n    <div className=\"close-button\">\n      <button onClick={closeModal}>\n        <IoIosClose />\n      </button>\n    </div>\n  </IconContext.Provider>\n);\n\nconst Modal = props => {\n  const { visible, title, body, footer, closeModal } = props;\n  return (\n    <StyledModal visible={visible}>\n      <CloseIcon closeModal={closeModal} />\n      <h2 style={{ display: \"flex\", alignItems: \"center\" }}>{title}</h2>\n      {body}\n      <div className=\"modal-footer\">{footer}</div>\n    </StyledModal>\n  );\n};\n\nCloseIcon.propTypes = {\n  closeModal: PropTypes.func\n};\n\nModal.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  body: PropTypes.node,\n  footer: PropTypes.node,\n  closeModal: PropTypes.func\n};\n\nexport default Modal;\n","import styled from 'styled-components';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ModalBackground = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  top: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  padding: calc(50px + 5.5rem) 50px 50px 50px;\n  z-index: 1;\n`;\n\nconst ModalWindow = styled.div`\n  background-color: whitesmoke;\n  border-radius: 5px;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 0.5rem 0.5rem 2rem 0.5rem;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  text-align: center;\n\n  h2 {\n    color: #ee6c4d;\n    text-align: center;\n    padding-bottom: 0.5rem;\n  }\n\n  h3 {\n    color: #3d5a80;\n    padding-bottom: 0.5rem;\n  }\n\n  p {\n    color: #3d5a80;\n    padding-bottom: 0.5rem;\n    max-width: 80%;\n    margin: 0 auto;\n\n    &:last-of-type {\n      font-size: 0.75rem;\n    }\n  }\n\n  img {\n    width: 80%;\n    border-radius: 5%;\n    opacity: 0.8;\n    padding-bottom: 0.5rem;\n  }\n`;\n\nconst StyledModal = (props) => {\n  const {\n    children,\n    visible,\n  } = props;\n  return visible && (\n  <ModalBackground>\n    <ReactCSSTransitionGroup\n      transitionName=\"fade\"\n      transitionAppear\n      transitionAppearTimeout={500}\n      transitionEnter={false}\n      transitionLeave\n      transitionLeaveTimeout={500}\n    >\n      <ModalWindow>{children}</ModalWindow>\n    </ReactCSSTransitionGroup>\n  </ModalBackground>\n  );\n};\n\nStyledModal.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default StyledModal;\n"],"sourceRoot":""}