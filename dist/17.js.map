{"version":3,"sources":["webpack:///./src/components/Map/Map.jsx","webpack:///./src/components/Map/index.jsx"],"names":["StyledMap","styled","div","_templateObject","colors","dark","primaryMap","fill","secondary","stroke","strokeWidth","outline","cursor","transition","secondaryMap","light","pressedMap","Map","props","data","center","zoom","geoUrl","handleClick","react_default","a","createElement","Map_Map","lib","projectionConfig","scale","width","height","style","geography","geographies","projection","map","key","properties","NAME","NAME_LONG","default","_objectSpread","hover","pressed","onClick","round","Spinner","propTypes","PropTypes","objectOf","object","arrayOf","number","isRequired","string","func","loading","bool","defaultProps"],"mappings":"ghBAGA,IAaeA,SAbGC,EAAOC,IAAVC,IACOC,IAAOC,grBCS7B,IAAMC,EAAa,CACjBC,KAAMH,IAAOI,UACbC,OAAQL,IAAOC,KACfK,YAAa,IACbC,QAAS,OACTC,OAAQ,UACRC,WAAY,YAGRC,EAAe,CACnBP,KAAMH,IAAOW,MACbN,OAAQL,IAAOC,KACfK,YAAa,IACbC,QAAS,OACTE,WAAY,YAGRG,EAAa,CACjBT,KAAMH,IAAOW,MACbN,OAAQL,IAAOC,KACfK,YAAa,IACbC,QAAS,OACTC,OAAQ,UACRC,WAAY,YAGRI,EAAM,SAAAC,GAAS,IACXC,EAA4CD,EAA5CC,KAAMC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,KAAMC,EAAwBJ,EAAxBI,OAAQC,EAAgBL,EAAhBK,YAEpC,OACEC,EAAAC,EAAAC,cAACC,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,cAAD,CACEC,iBAAkB,CAChBC,MAAO,KAETC,MAAO,IACPC,OAAQ,IACRC,MAAO,CACLF,MAAO,OACPC,OAAQ,SAGTb,EACCK,EAAAC,EAAAC,cAACE,EAAA,cAAD,CAAeR,OAAQA,EAAQC,KAAMA,GACnCG,EAAAC,EAAAC,cAACE,EAAA,YAAD,CAAaM,UAAWZ,GACrB,SAACa,EAAaC,GAAd,OACCD,EAAYE,IAAI,SAAAH,GAAS,OACvBV,EAAAC,EAAAC,cAACE,EAAA,UAAD,CACEU,IAAKJ,EAAUK,WAAWC,KAC1BN,UAAWA,EACXE,WAAYA,EACZH,MACEd,EACEe,EAAUK,WAAWC,MACnBN,EAAUK,WAAWE,WAErB,CACEC,QAAAC,EAAA,GAAcrC,GACdsC,MAAKD,EAAA,GAAO3B,GACZ6B,QAAOF,EAAA,GAAO3B,IAEhB,CACE0B,QAAAC,EAAA,GAAc7B,GACd8B,MAAKD,EAAA,GAAO7B,GACZ+B,QAAOF,EAAA,GAAO7B,IAGtBgC,QACE3B,EACEe,EAAUK,WAAWC,MACnBN,EAAUK,WAAWE,YACpBlB,EAEPwB,OAAK,SAOfvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,SAOV/B,EAAIgC,UAAY,CACd9B,KAAM+B,IAAUC,SAASD,IAAUE,QACnChC,OAAQ8B,IAAUG,QAAQH,IAAUI,QAAQC,WAC5ClC,KAAM6B,IAAUI,OAAOC,WACvBjC,OAAQ4B,IAAUM,OAAOD,WACzBhC,YAAa2B,IAAUO,KAAKF,WAC5BG,QAASR,IAAUS,KAAKJ,YAG1BtC,EAAI2C,aAAe,CACjBzC,KAAM,MAGOF","file":"17.js","sourcesContent":["import styled from 'styled-components';\nimport {colors} from '../../styles/globals';\n\nconst StyledMap = styled.div`\n  border: 2px solid ${colors.dark};\n  border-radius: 2px;\n  width: 98vw;\n  margin: 0 auto;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  @media (min-width: 433px) {\n    width: 60vw;\n  }\n`;\n\nexport default StyledMap;\n","import {\n  ComposableMap,\n  Geographies,\n  Geography,\n  ZoomableGroup\n} from \"react-simple-maps\";\n\nimport PropTypes from \"prop-types\";\nimport { colors } from \"../../styles/globals\";\nimport React from \"react\";\nimport StyledMap from \"./Map\";\nimport Spinner from \"../../utils/Spinner\";\n\nconst primaryMap = {\n  fill: colors.secondary,\n  stroke: colors.dark,\n  strokeWidth: 0.65,\n  outline: \"none\",\n  cursor: \"pointer\",\n  transition: \"fill .5s\"\n};\n\nconst secondaryMap = {\n  fill: colors.light,\n  stroke: colors.dark,\n  strokeWidth: 0.65,\n  outline: \"none\",\n  transition: \"fill .5s\"\n};\n\nconst pressedMap = {\n  fill: colors.light,\n  stroke: colors.dark,\n  strokeWidth: 0.65,\n  outline: \"none\",\n  cursor: \"pointer\",\n  transition: \"fill .5s\"\n};\n\nconst Map = props => {\n  const { data, center, zoom, geoUrl, handleClick } = props;\n\n  return (\n    <StyledMap>\n      <ComposableMap\n        projectionConfig={{\n          scale: 220\n        }}\n        width={980}\n        height={551}\n        style={{\n          width: \"100%\",\n          height: \"auto\"\n        }}\n      >\n        {data ? (\n          <ZoomableGroup center={center} zoom={zoom}>\n            <Geographies geography={geoUrl}>\n              {(geographies, projection) =>\n                geographies.map(geography => (\n                  <Geography\n                    key={geography.properties.NAME}\n                    geography={geography}\n                    projection={projection}\n                    style={\n                      data[\n                        geography.properties.NAME ||\n                          geography.properties.NAME_LONG\n                      ]\n                        ? {\n                            default: { ...primaryMap },\n                            hover: { ...pressedMap },\n                            pressed: { ...pressedMap }\n                          }\n                        : {\n                            default: { ...secondaryMap },\n                            hover: { ...secondaryMap },\n                            pressed: { ...secondaryMap }\n                          }\n                    }\n                    onClick={\n                      data[\n                        geography.properties.NAME ||\n                          geography.properties.NAME_LONG\n                      ] && handleClick\n                    }\n                    round\n                  />\n                ))\n              }\n            </Geographies>\n          </ZoomableGroup>\n        ) : (\n          <Spinner />\n        )}\n      </ComposableMap>\n    </StyledMap>\n  );\n};\n\nMap.propTypes = {\n  data: PropTypes.objectOf(PropTypes.object),\n  center: PropTypes.arrayOf(PropTypes.number).isRequired,\n  zoom: PropTypes.number.isRequired,\n  geoUrl: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired\n};\n\nMap.defaultProps = {\n  data: null\n};\n\nexport default Map;\n"],"sourceRoot":""}