{"version":3,"sources":["webpack:///./src/components/Button/index.jsx","webpack:///./src/components/Modal/index.jsx","webpack:///./src/components/Modal/Modal.jsx"],"names":["__webpack_require__","_Button","Button","_ref","action","title","large","dataAttr","_react2","default","createElement","StyledButton","onClick","isLarge","data-attr","propTypes","PropTypes","func","isRequired","string","bool","number","defaultProps","undefined","Modal","props","show","close","country","breakfastName","info","description","img","attr","alt","_Modal2","visible","src","className","_Button2","window","open","ModalBackground","styled","div","_templateObject","ModalWindow","_templateObject2","StyledModal","children","_reactAddonsCssTransitionGroup2","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","transitionLeaveTimeout","oneOfType","arrayOf","node"],"mappings":"6IAAA,QAAAA,EAAA,QACAA,EAAA,IACAC,EAAAD,EAAA,uDAEA,IAAME,EAAS,SAAAC,GAAA,IACbC,EADaD,EACbC,OAAQC,EADKF,EACLE,MAAOC,EADFH,EACEG,MAAOC,EADTJ,EACSI,SADT,OAGbC,EAAAC,QAAAC,cAACT,EAAAU,aAAD,CAAcC,QAASR,EAAQS,QAASP,EAAOQ,YAAWP,GACvDF,IAILH,EAAOa,UAAY,CACjBX,OAAQY,UAAUC,KAAKC,WACvBb,MAAOW,UAAUG,OAAOD,WACxBZ,MAAOU,UAAUI,KACjBb,SAAUS,UAAUK,QAGtBnB,EAAOoB,aAAe,CACpBhB,OAAO,EACPC,cAAUgB,aAGGrB,oFCvBf,QAAAF,EAAA,QACAA,EAAA,QAEAA,EAAA,SACAA,EAAA,wDAEA,IAAMwB,EAAQ,SAAAC,GAAS,IAEnBC,EASED,EATFC,KACAC,EAQEF,EARFE,MACAC,EAOEH,EAPFG,QACAC,EAMEJ,EANFI,cACAC,EAKEL,EALFK,KACAC,EAIEN,EAJFM,YACAC,EAGEP,EAHFO,IACAC,EAEER,EAFFQ,KACAC,EACET,EADFS,IAEF,OACE1B,EAAAC,QAAAC,cAACyB,EAAA1B,QAAD,CAAa2B,QAASV,GACpBlB,EAAAC,QAAAC,cAAA,UAAKkB,GACLpB,EAAAC,QAAAC,cAAA,UACGmB,EACAC,GAEHtB,EAAAC,QAAAC,cAAA,SAAIqB,GACJvB,EAAAC,QAAAC,cAAA,OAAK2B,IAAKL,EAAKE,IAAKA,IACpB1B,EAAAC,QAAAC,cAAA,SAAIuB,GACJzB,EAAAC,QAAAC,cAAA,OAAK4B,UAAU,gBACb9B,EAAAC,QAAAC,cAAC6B,EAAA9B,QAAD,CACEL,OAAQ,kBACNoC,OAAOC,KAAP,kCACoCZ,EADpC,YAIFxB,MAAM,qBAERG,EAAAC,QAAAC,cAAC6B,EAAA9B,QAAD,CAAQL,OAAQuB,EAAOtB,MAAM,aAMrCmB,EAAMT,UAAY,CAChBW,KAAMV,UAAUI,KAAKF,WACrBS,MAAOX,UAAUC,KAAKC,WACtBU,QAASZ,UAAUG,OAAOD,WAC1BW,cAAeb,UAAUG,OAAOD,WAChCY,KAAMd,UAAUG,OAAOD,WACvBa,YAAaf,UAAUG,OAAOD,WAC9Bc,IAAKhB,UAAUG,OAAOD,WACtBe,KAAMjB,UAAUG,OAAOD,WACvBgB,IAAKlB,UAAUG,OAAOD,sBAGTM,kqDCxDfxB,EAAA,SACAA,EAAA,UACAA,EAAA,QACAA,EAAA,uJAEA,IAAM0C,EAAkBC,UAAOC,IAAzBC,GAWAC,EAAcH,UAAOC,IAArBG,GAwCAC,EAAc,SAACvB,GAAU,IAE3BwB,EAEExB,EAFFwB,SAGF,OADIxB,EADFW,SAGF5B,EAAAC,QAAAC,cAACgC,EAAD,KACElC,EAAAC,QAAAC,cAACwC,EAAAzC,QAAD,CACE0C,eAAe,OACfC,kBAAA,EACAC,wBAAyB,IACzBC,iBAAiB,EACjBC,iBAAA,EACAC,uBAAwB,KAExBhD,EAAAC,QAAAC,cAACoC,EAAD,KAAcG,MAMpBD,EAAYjC,UAAY,CACtBkC,SAAUjC,UAAUyC,UAAU,CAC5BzC,UAAU0C,QAAQ1C,UAAU2C,MAC5B3C,UAAU2C,OACTzC,sBAGU8B","file":"6.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledButton } from './Button';\n\nconst Button = ({\n  action, title, large, dataAttr,\n}) => (\n  <StyledButton onClick={action} isLarge={large} data-attr={dataAttr}>\n    {title}\n  </StyledButton>\n);\n\nButton.propTypes = {\n  action: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  large: PropTypes.bool,\n  dataAttr: PropTypes.number,\n};\n\nButton.defaultProps = {\n  large: false,\n  dataAttr: undefined,\n};\n\nexport default Button;\n","/* eslint-disable no-unused-expressions */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Button from \"../Button\";\nimport StyledModal from \"./Modal\";\n\nconst Modal = props => {\n  const {\n    show,\n    close,\n    country,\n    breakfastName,\n    info,\n    description,\n    img,\n    attr,\n    alt\n  } = props;\n  return (\n    <StyledModal visible={show}>\n      <h2>{country}</h2>\n      <h3>\n        {breakfastName}\n        {info}\n      </h3>\n      <p>{description}</p>\n      <img src={img} alt={alt} />\n      <p>{attr}</p>\n      <div className=\"modal-footer\">\n        <Button\n          action={() =>\n            window.open(\n              `https://www.google.pl/search?q=${breakfastName}+recipe`\n            )\n          }\n          title=\"Take a challenge\"\n        />\n        <Button action={close} title=\"Close\" />\n      </div>\n    </StyledModal>\n  );\n};\n\nModal.propTypes = {\n  show: PropTypes.bool.isRequired,\n  close: PropTypes.func.isRequired,\n  country: PropTypes.string.isRequired,\n  breakfastName: PropTypes.string.isRequired,\n  info: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  attr: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired\n};\n\nexport default Modal;\n","import styled from 'styled-components';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ModalBackground = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  top: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  padding: calc(50px + 5.5rem) 50px 50px 50px;\n  z-index: 1;\n`;\n\nconst ModalWindow = styled.div`\n  background-color: whitesmoke;\n  border-radius: 5px;\n  max-width: 500px;\n  min-height: 300px;\n  margin: 0 auto;\n  padding: 30px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  text-align: center;\n\n  h2 {\n    color: #ee6c4d;\n    text-align: center;\n    padding-bottom: 0.5rem;\n  }\n\n  h3 {\n    color: #3d5a80;\n    padding-bottom: 0.5rem;\n  }\n\n  p {\n    color: #3d5a80;\n    padding-bottom: 0.5rem;\n\n    &:last-of-type {\n      font-size: 0.75rem;\n    }\n  }\n\n  img {\n    width: 80%;\n    border-radius: 5%;\n    opacity: 0.8;\n    padding-bottom: 0.5rem;\n  }\n`;\n\nconst StyledModal = (props) => {\n  const {\n    children,\n    visible,\n  } = props;\n  return visible && (\n  <ModalBackground>\n    <ReactCSSTransitionGroup\n      transitionName=\"fade\"\n      transitionAppear\n      transitionAppearTimeout={500}\n      transitionEnter={false}\n      transitionLeave\n      transitionLeaveTimeout={500}\n    >\n      <ModalWindow>{children}</ModalWindow>\n    </ReactCSSTransitionGroup>\n  </ModalBackground>\n  );\n};\n\nStyledModal.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default StyledModal;\n"],"sourceRoot":""}