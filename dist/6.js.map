{"version":3,"sources":["webpack:///./src/components/Header/index.jsx","webpack:///./src/components/Header/Header.jsx","webpack:///./src/img/breakfast.svg","webpack:///./src/components/AuthModals/AuthModals.js","webpack:///./src/components/SignUpForm/SignUpForm.js","webpack:///./src/utils/Form/Form.jsx","webpack:///./src/components/SignInForm/SignInForm.js","webpack:///./src/utils/Button/index.jsx","webpack:///./src/utils/Button/Button.jsx","webpack:///./src/utils/Modal/index.jsx","webpack:///./src/utils/Modal/Modal.jsx","webpack:///./src/utils/Form/index.jsx","webpack:///./src/utils/validation.js"],"names":["_react","__webpack_require__","Logo","React","lazy","e","then","t","bind","_react2","default","createElement","_Header2","src","logoPic","alt","Suspense","fallback","_AuthModals2","_styledComponents","_globals","StyledHeader","styled","header","_templateObject","colors","dark","module","exports","p","Button","Promise","resolve","AuthModals","state","signIn","signUp","toggleModal","mode","_this","setState","prevProps","Component","_this2","this","_state","large","action","title","_Modal2","visible","closeModal","body","_context2","Consumer","firebase","_SignInForm2","_SignUpForm2","_validation","SignUpForm","initialValues","email","password","confirmPassword","fieldsConfig","type","name","placeholder","_Form2","_extends","fields","validationSchema","signUpSchema","props","propTypes","PropTypes","object","Form","form","Input","input","_templateObject2","accent","Error","div","_templateObject3","SignInForm","signInSchema","_Button","_ref","dataAttr","StyledButton","onClick","isLarge","data-attr","oneOfType","func","string","isRequired","bool","number","defaultProps","undefined","button","light","css","ButtonList","CloseIcon","all","Modal","footer","style","display","alignItems","className","node","ModalBackground","ModalWindow","StyledModal","children","_reactAddonsCssTransitionGroup2","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","transitionLeaveTimeout","arrayOf","_formik","_Form","FormTemplate","doCreateUserWithEmailAndPassword","Formik","onSubmit","values","actions","response","setSubmitting","console","log","data","error","setStatus","msg","message","handleChange","handleBlur","handleSubmit","errors","touched","status","map","field","key","onChange","onBlur","value","_Button2","url","firebaseAction","yup","shape","min","required","oneOf","ref"],"mappings":"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","file":"6.js","sourcesContent":["import React, { Suspense } from \"react\";\nimport StyledHeader from \"./Header\";\nconst Logo = React.lazy(() => import(\"../../utils/Logo\"));\nimport logoPic from \"../../img/breakfast.svg\";\nimport AuthModals from \"../AuthModals/AuthModals\";\n\nconst Header = () => {\n  return (\n    <StyledHeader>\n      <Logo>\n        <img src={logoPic} alt=\"Icon depicting breakfast plate\" />\n        <h1>Breakfast</h1>\n      </Logo>\n      <Suspense fallback={<div />}>\n        <AuthModals />\n      </Suspense>\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n","\nimport styled from 'styled-components';\nimport {colors} from '../../styles/globals';\n\nconst StyledHeader = styled.header`\n  background-color: ${colors.dark};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 2rem;\n`;\n\nexport default StyledHeader;\n","module.exports = __webpack_public_path__ + \"img/c752d8b1b96dd4e6aa2c79fdfa2b4e3e.svg\";","import React, { Component, Suspense } from \"react\";\nimport SignUpForm from \"../SignUpForm/SignUpForm\";\nimport FirebaseContext from \"../Firebase/context\";\nimport SignInForm from \"../SignInForm/SignInForm\";\nimport Modal from \"../../utils/Modal\";\n\nconst Button = React.lazy(() => import(\"../../utils/Button\"));\n\nclass AuthModals extends Component {\n  state = {\n    signIn: false,\n    signUp: false\n  };\n\n  toggleModal = mode => {\n    this.setState(prevProps => ({\n      [mode]: !prevProps[mode]\n    }));\n  };\n\n  render() {\n    const { signUp, signIn } = this.state;\n    return (\n      <div>\n        <Suspense fallback={<div />}>\n          <Button\n            large\n            action={() => this.toggleModal(\"signIn\")}\n            title=\"Sign in\"\n          />\n          <Button\n            large\n            action={() => this.toggleModal(\"signUp\")}\n            title=\"Sign up\"\n          />\n          <Modal\n            visible={signIn}\n            closeModal={() => this.toggleModal(\"signIn\")}\n            title=\"Sign in\"\n            body={\n              <FirebaseContext.Consumer>\n                {firebase => <SignInForm firebase={firebase} />}\n              </FirebaseContext.Consumer>\n            }\n          />\n          <Modal\n            visible={signUp}\n            closeModal={() => this.toggleModal(\"signUp\")}\n            title=\"Sign up\"\n            body={\n              <FirebaseContext.Consumer>\n                {firebase => <SignUpForm firebase={firebase} />}\n              </FirebaseContext.Consumer>\n            }\n          />\n        </Suspense>\n      </div>\n    );\n  }\n}\n\nexport default AuthModals;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormTemplate from \"../../utils/Form\";\nimport { signUpSchema } from \"../../utils/validation\";\n\nclass SignUpForm extends Component {\n  state = {\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    }\n  };\n\n  fieldsConfig = [\n    { type: \"text\", name: \"email\", placeholder: \"Email\" },\n    { type: \"password\", name: \"password\", placeholder: \"Password\" },\n    {\n      type: \"password\",\n      name: \"confirmPassword\",\n      placeholder: \"Confirm password\"\n    }\n  ];\n\n  render() {\n    const { initialValues } = this.state;\n    return (\n      <FormTemplate\n        initialValues={initialValues}\n        fields={this.fieldsConfig}\n        validationSchema={signUpSchema}\n        {...this.props}\n      />\n    );\n  }\n}\n\nSignUpForm.propTypes = {\n  initialValues: PropTypes.object\n};\n\nexport default SignUpForm;\n","import styled from \"styled-components\";\nimport { colors } from \"../../styles/globals\";\n\nconst Form = styled.form`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 1rem 0;\n`;\n\nconst Input = styled.input`\n  width: 300px;\n  height: 35px;\n  border: 2px solid ${colors.dark};\n  background-color: #fff;\n  margin-bottom: 0.5rem;\n  padding: 0.25rem;\n  color: ${colors.dark};\n  font-size: 1rem;\n\n  &:focus {\n    border: 2px solid ${colors.accent};\n    outline: none;\n  }\n`;\n\nconst Error = styled.div`\n  font-size: 0.75rem;\n  color: ${colors.accent};\n  margin-bottom: 0.5rem;\n`;\n\nexport { Form, Input, Error };\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormTemplate from \"../../utils/Form\";\nimport { signInSchema } from \"../../utils/validation\";\n\nclass SignInForm extends Component {\n  state = {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    }\n  };\n\n  fieldsConfig = [\n    { type: \"text\", name: \"email\", placeholder: \"Email\" },\n    { type: \"password\", name: \"password\", placeholder: \"Password\" }\n  ];\n\n  render() {\n    const { initialValues } = this.state;\n    return (\n      <FormTemplate\n        initialValues={initialValues}\n        fields={this.fieldsConfig}\n        validationSchema={signInSchema}\n        {...this.props}\n      />\n    );\n  }\n}\n\nSignInForm.propTypes = {\n  initialValues: PropTypes.object\n};\n\nexport default SignInForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StyledButton } from \"./Button\";\n\nconst Button = ({ action, title, large, dataAttr }) => (\n  <StyledButton\n    {...(typeof action === \"string\" ? { type: action } : { onClick: action })}\n    isLarge={large}\n    data-attr={dataAttr}\n  >\n    {title}\n  </StyledButton>\n);\n\nButton.propTypes = {\n  action: PropTypes.oneOfType([PropTypes.func, PropTypes.string]).isRequired,\n  title: PropTypes.string.isRequired,\n  large: PropTypes.bool,\n  dataAttr: PropTypes.number\n};\n\nButton.defaultProps = {\n  large: false,\n  dataAttr: undefined\n};\n\nexport default Button;\n","import styled, { css } from 'styled-components';\nimport {colors} from '../../styles/globals';\n\nconst StyledButton = styled.button`\n  border: 2px solid ${colors.dark};\n  background-color: ${colors.light};\n  padding: 0.5rem;\n  margin: 0.25rem;\n  color: ${colors.dark};\n  font-weight: 700;\n  cursor: pointer;\n  border-radius: 2px;\n  transition: background-color 1s;\n\n  a {\n    color: ${colors.accent};\n    text-decoration: none;\n    width: 100%;\n    height: 100%;\n    &:hover {\n      color: white;\n    }\n  }\n\n  &:hover {\n    background-color: ${colors.accent};\n    color: white;\n    a {\n      color: white;\n    }\n  }\n\n  ${props => props.isLarge\n    && css`\n      background-color: transparent;\n      border-color: ${colors.light};\n      color: ${colors.light};\n      font-size: 1rem;\n      height: 3rem;\n    `}\n`;\n\nconst ButtonList = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  padding-bottom: 1rem;\n`;\n\nexport { StyledButton, ButtonList };\n","/* eslint-disable no-unused-expressions */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport StyledModal from \"./Modal\";\nconst CloseIcon = React.lazy(() => import(\"./CloseIcon\"));\n\nconst Modal = props => {\n  const { visible, title, body, footer, closeModal } = props;\n  return (\n    <StyledModal visible={visible}>\n      <CloseIcon closeModal={closeModal} />\n      <h2 style={{ display: \"flex\", alignItems: \"center\" }}>{title}</h2>\n      {body}\n      <div className=\"modal-footer\">{footer}</div>\n    </StyledModal>\n  );\n};\n\nModal.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  body: PropTypes.node,\n  footer: PropTypes.node,\n  closeModal: PropTypes.func\n};\n\nexport default Modal;\n","import styled from \"styled-components\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ModalBackground = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  top: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  padding: calc(50px + 5.5rem) 50px 50px 50px;\n  z-index: 1;\n`;\n\nconst ModalWindow = styled.div`\n  background-color: whitesmoke;\n  border-radius: 5px;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 0.5rem 0.5rem 2rem 0.5rem;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  text-align: center;\n\n  h2 {\n    color: #ee6c4d;\n    text-align: center;\n    padding-bottom: 0.5rem;\n  }\n\n  h3 {\n    color: #3d5a80;\n    padding-bottom: 0.5rem;\n  }\n\n  p {\n    color: #3d5a80;\n    padding-bottom: 0.5rem;\n    max-width: 80%;\n    margin: 0 auto;\n\n    &:last-of-type {\n      font-size: 0.75rem;\n    }\n  }\n\n  img {\n    width: 80%;\n    border-radius: 5%;\n    opacity: 0.8;\n    padding-bottom: 0.5rem;\n  }\n`;\n\nconst StyledModal = props => {\n  const { children, visible } = props;\n  return (\n    visible && (\n      <ModalBackground>\n        <ReactCSSTransitionGroup\n          transitionName=\"fade\"\n          transitionAppear\n          transitionAppearTimeout={500}\n          transitionEnter={false}\n          transitionLeave\n          transitionLeaveTimeout={500}\n        >\n          <ModalWindow>{children}</ModalWindow>\n        </ReactCSSTransitionGroup>\n      </ModalBackground>\n    )\n  );\n};\n\nStyledModal.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n\nexport default StyledModal;\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport PropTypes from \"prop-types\";\n\nimport { Error, Form, Input } from \"./Form\";\nimport Button from \"../Button\";\n\nconst FormTemplate = props => {\n  const {\n    initialValues,\n    fields,\n    validationSchema,\n    firebase: { doCreateUserWithEmailAndPassword }\n  } = props;\n\n  const onSubmit = (values, actions) => {\n    doCreateUserWithEmailAndPassword(values).then(\n      response => {\n        actions.setSubmitting(false);\n        console.log(response.data);\n      },\n      error => {\n        actions.setSubmitting(false);\n        actions.setStatus({ msg: error.message });\n      }\n    );\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      validationSchema={validationSchema}\n    >\n      {({\n        values,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        errors,\n        touched,\n        status\n      }) => {\n        return (\n          <Form onSubmit={handleSubmit}>\n            {fields.map(field => (\n              <div key={field.name}>\n                <Input\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values[field.name]}\n                  type={field.type}\n                  name={field.name}\n                  placeholder={field.placeholder}\n                />\n                {errors[field.name] && touched[field.name] ? (\n                  <Error>{errors[field.name]}</Error>\n                ) : null}\n              </div>\n            ))}\n            {status && status.msg && <Error>{status.msg}</Error>}\n            <Button title=\"Submit\" action=\"submit\" />\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nFormTemplate.propTypes = {\n  initialValues: PropTypes.object,\n  url: PropTypes.string,\n  firebaseAction: PropTypes.func,\n  fields: PropTypes.arrayOf(PropTypes.object),\n  validationSchema: PropTypes.object,\n  firebase: PropTypes.object\n};\n\nexport default FormTemplate;\n","import * as yup from \"yup\";\n\nconst signInSchema = yup.object().shape({\n  password: yup\n    .string()\n    .min(6, \"Your password is too short!\")\n    .required(\"This field is required!\"),\n  email: yup\n    .string()\n    .email(\"Your email is invalid!\")\n    .required(\"This field is required!\")\n});\n\nconst signUpSchema = yup.object().shape({\n  password: yup\n    .string()\n    .min(6, \"Your password is too short!\")\n    .required(\"This field is required!\"),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\n  email: yup\n    .string()\n    .email(\"Your email is invalid!\")\n    .required(\"This field is required!\")\n});\n\nexport { signInSchema, signUpSchema };\n"],"sourceRoot":""}