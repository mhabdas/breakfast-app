{"version":3,"sources":["webpack:///./src/utils/Button/Button.jsx","webpack:///./src/components/MapContainer/MapContainer.jsx"],"names":["StyledButton","styled","button","_templateObject","colors","dark","light","accent","props","isLarge","css","_templateObject2","ButtonList","div","_templateObject3","Button","React","lazy","__webpack_require__","e","then","bind","Map","Promise","all","Modal","MainSection","initialState","breakfastName","description","img","attr","alt","info","apiUrl","initialZoom","center","zoom","MapContainer","_useState2","_slicedToArray","useState","data","setData","_useState4","name","coordinates","continents","_useState6","visible","setVisible","_useState8","country","setCountry","_useState10","_objectSpread","breakfastByCountry","setBreakfastByCountry","_useState12","setZoom","useEffect","ignore","_fetchData","regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","axios","sent","stop","apply","this","arguments","fetchData","getBreakfastData","breakfast","forEach","element","_toConsumableArray","handleToggle","handleZoom","contId","target","getAttribute","cont","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_0__","fallback","title","closeModal","body","src","footer","action","window","open","concat","geoUrl","handleClick","geography","countryName","properties","NAME","_utils_Button_Button__WEBPACK_IMPORTED_MODULE_2__","map","i","key","dataAttr","Math","floor","random","length"],"mappings":"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","file":"12.js","sourcesContent":["import styled, { css } from 'styled-components';\nimport {colors} from '../../styles/globals';\n\nconst StyledButton = styled.button`\n  border: 2px solid ${colors.dark};\n  background-color: ${colors.light};\n  padding: 0.5rem;\n  margin: 0.25rem;\n  color: ${colors.dark};\n  font-weight: 700;\n  cursor: pointer;\n  border-radius: 2px;\n  transition: background-color 1s;\n\n  a {\n    color: ${colors.accent};\n    text-decoration: none;\n    width: 100%;\n    height: 100%;\n    &:hover {\n      color: white;\n    }\n  }\n\n  &:hover {\n    background-color: ${colors.accent};\n    color: white;\n    a {\n      color: white;\n    }\n  }\n\n  ${props => props.isLarge\n    && css`\n      background-color: transparent;\n      border-color: ${colors.light};\n      color: ${colors.light};\n      font-size: 1rem;\n      height: 3rem;\n    `}\n`;\n\nconst ButtonList = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  padding-bottom: 1rem;\n`;\n\nexport { StyledButton, ButtonList };\n","import React, { Suspense, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\n\nconst Button = React.lazy(() => import(\"../../utils/Button\"));\nconst Map = React.lazy(() => import(\"../Map\"));\nconst Modal = React.lazy(() => import(\"../../utils/Modal\"));\nconst MainSection = React.lazy(() => import(\"../MainSection\"));\nimport { ButtonList } from \"../../utils/Button/Button\";\nimport Spinner from \"../../utils/Spinner\";\n\nconst initialState = {\n  breakfastName: \"\",\n  description: \"\",\n  img: \"\",\n  attr: \"\",\n  alt: \"\",\n  info:\n    \"Sorry. This content is not yet available. Try a different or random country.\"\n};\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-50m.json\";\nconst apiUrl =\n  \"https://codekingdom.pl/projects/coderslab-workshops/international-breakfast/\";\n\nconst initialZoom = {\n  center: [0, 20],\n  zoom: 1\n};\n\nconst MapContainer = () => {\n  const [data, setData] = useState({ data: [] });\n  const [continents, setContinents] = useState([\n    { name: \"Asia\", coordinates: [103.8198, 15.3521] },\n    { name: \"Africa\", coordinates: [3.3792, 6.5244] },\n    { name: \"Australia\", coordinates: [151.2093, -33.8688] },\n    { name: \"Europe\", coordinates: [8.5417, 52.3769] },\n    { name: \"North America\", coordinates: [-122.4194, 37.7749] },\n    { name: \"South America\", coordinates: [-58.3816, -18.6037] }\n  ]);\n  const [visible, setVisible] = useState(false);\n  const [country, setCountry] = useState(\"\");\n  const [breakfastByCountry, setBreakfastByCountry] = useState({\n    ...initialState\n  });\n  const [zoom, setZoom] = useState({ ...initialZoom });\n\n  useEffect(() => {\n    let ignore = false;\n\n    async function fetchData() {\n      const result = await axios(apiUrl);\n      if (!ignore) setData(result.data);\n    }\n\n    fetchData();\n    return () => {\n      ignore = true;\n    };\n  }, []);\n\n  const getBreakfastData = () => {\n    data.breakfast.forEach(element => {\n      if (element.name === country) {\n        setBreakfastByCountry(...element);\n      }\n    });\n  };\n\n  useEffect(() => {\n    data.breakfast && country !== \"\" &&\n      data.breakfast.forEach(element => {\n        if (element.name === country) {\n          setBreakfastByCountry({ ...element });\n        }\n      });\n  }, [country, data]);\n\n  const handleToggle = () => {\n    setVisible(!visible);\n  };\n\n  const handleZoom = e => {\n    const contId = e.target.getAttribute(\"data-attr\");\n    const cont = continents[contId];\n    if (cont.name === \"Europe\") {\n      setZoom({\n        center: cont.coordinates,\n        zoom: 3.5\n      });\n    } else {\n      setZoom({\n        center: cont.coordinates,\n        zoom: 2\n      });\n    }\n  };\n\n  const handleReset = () => {\n    setZoom({ ...initialZoom });\n  };\n\n  const handleClick = geography => {\n    const countryName = geography.properties.NAME;\n    setCountry(countryName);\n    getBreakfastData(countryName);\n    handleToggle();\n  };\n\n  const handleClose = () => {\n    handleToggle();\n    setBreakfastByCountry({ ...initialState });\n    setCountry(\"\");\n  };\n\n  const handleRandom = () => {\n    const random =\n      data.breakfast &&\n      data.breakfast[Math.floor(Math.random() * data.breakfast.length)];\n    const countryName = random.name;\n    setCountry(countryName);\n    getBreakfastData(countryName);\n    handleToggle();\n  };\n\n  const {\n    breakfastName,\n    description,\n    img,\n    attr,\n    info,\n    alt,\n    center\n  } = breakfastByCountry;\n  return (\n    <MainSection>\n      <Suspense fallback={<div />}>\n        <Modal\n          visible={visible}\n          title={country}\n          closeModal={() => handleClose()}\n          body={\n            <div>\n              <h3>\n                {breakfastName}\n                {info}\n              </h3>\n              <p>{description}</p>\n              <img src={img} alt={alt} />\n              <p>{attr}</p>\n            </div>\n          }\n          footer={\n            <div>\n              <Button\n                action={() =>\n                  window.open(\n                    `https://www.google.pl/search?q=${breakfastName}+recipe`\n                  )\n                }\n                title=\"Take a challenge\"\n              />\n            </div>\n          }\n        />\n      </Suspense>\n      <Map\n        data={data.breakfast}\n        center={zoom.center}\n        geoUrl={geoUrl}\n        zoom={zoom.zoom}\n        handleClick={handleClick}\n      />\n      <ButtonList>\n        {continents.map((cont, i) => (\n          <Button\n            key={cont.name}\n            action={handleZoom}\n            dataAttr={i}\n            title={cont.name}\n          />\n        ))}\n        <Button action={handleReset} title=\"Reset\" />\n        <Button action={handleRandom} title=\"Random\" />\n      </ButtonList>\n    </MainSection>\n  );\n};\n\nexport default MapContainer;\n"],"sourceRoot":""}